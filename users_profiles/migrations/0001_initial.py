# Generated by Django 5.2.5 on 2025-09-05 08:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('histories_configurations', '0004_alter_paymentstatus_options'),
        ('reflexo', '0001_initial'),
        ('ubi_geo', '0004_alter_country_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserVerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Código')),
                ('expires_at', models.DateTimeField(verbose_name='Expira en')),
                ('failed_attempts', models.IntegerField(default=0, verbose_name='Intentos fallidos')),
                ('locked_until', models.DateTimeField(blank=True, null=True, verbose_name='Bloqueado hasta')),
                ('created_at', models.DateTimeField(verbose_name='Creado en')),
                ('updated_at', models.DateTimeField(verbose_name='Actualizado en')),
            ],
            options={
                'verbose_name': 'Código de verificación de usuario',
                'verbose_name_plural': 'Códigos de verificación de usuarios',
                'db_table': 'users_verification_code',
                'ordering': ['-created_at'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('last_login', models.DateTimeField(blank=True, db_column='last_session', null=True)),
                ('document_number', models.CharField(max_length=20, unique=True, verbose_name='Número de documento')),
                ('user_name', models.CharField(max_length=50, unique=True, verbose_name='Nombre de usuario')),
                ('photo_url', models.ImageField(blank=True, null=True, upload_to='users/photos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])], verbose_name='Foto de perfil')),
                ('name', models.CharField(max_length=100, verbose_name='Nombres')),
                ('paternal_lastname', models.CharField(max_length=100, verbose_name='Apellido paterno')),
                ('maternal_lastname', models.CharField(max_length=100, verbose_name='Apellido materno')),
                ('sex', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, null=True, verbose_name='Sexo')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono')),
                ('password_change', models.BooleanField(default=False, verbose_name='Requiere cambio de contraseña')),
                ('account_statement', models.CharField(default='A', max_length=1, verbose_name='Estado de cuenta')),
                ('email_verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Email verificado en')),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True, verbose_name='Token de recordatorio')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado en')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Actualizado en')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Eliminado en')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ubi_geo.country', verbose_name='País')),
                ('document_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='histories_configurations.documenttype', verbose_name='Tipo de documento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('reflexo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='reflexo.reflexo', verbose_name='Empresa/Tenant')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
                'managed': True,
            },
        ),
    ]
